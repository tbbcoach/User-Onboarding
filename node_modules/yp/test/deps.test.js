/**
 * Created by aesop on 2016/2/1.
 */
'use strict';

const should = require('chai').should(),
    deps = require('../lib/deps');

describe('deps module', function(){
    describe('#recalculateFileToCompileList', function(){
        it('should return a list with who has dependency on it', function(){
            let mapRev = {
                map:{
                    'a/b.png' : new Set(['a/c.css', 'd.css']),
                    'a/c.css' : new Set(),
                    'd.css' : new Set(),
                    '1.gif' : new Set()
                }
            };
            let fileList = new Set(['a/b.png','d.css']);
            Array.from(deps.recalFileList(fileList, mapRev)).sort().should.deep.equal(['a/b.png','a/c.css','d.css'].sort());
        });
    });
    describe('#orderlyDeps', function(){
        it('should return an array with compatible order', function(){
            let mapResources = {
                'a/b.png': new Set(),
                '1.gif': new Set(),
                'a/c.css': new Set(['a/b.png']),
                'd.css': new Set(['a/b.png', '1.gif']),
                deps(name){
                    return this[name]
                }
            };
            let fileList = new Set(['a/c.css','a/b.png', 'd.css', '1.gif']);
            deps.orderlyDeps(fileList, mapResources).should.deep.equal(['a/b.png','a/c.css', '1.gif', 'd.css']);
        });
    });
});