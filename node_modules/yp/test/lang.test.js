/**
 * Created by aesop on 2016/2/2.
 */

'use strict';
const should = require('chai').should;
const lang = require('../lib/lang');

describe('lang module', function () {
    describe('#map Object', function () {
        it('should return an object with all value after function return', function () {
            let obj = {
                a: 2,
                b: 3
            };
            lang.mapObject(obj, (x, y) => 2 * y).should.deep.equal({
                a: 4,
                b: 6
            });
        })
    });

    describe('#map set ', function () {
        it('should return an array with all value after function return', function () {
            let s = new Set([1, 2, 3]);
            lang.mapSet(s, (x) => 3 * x).should.deep.equal([3, 6, 9])
        });
        it('should return an empty array with empty set given', function () {
            lang.mapSet(new Set(), x=>x).should.has.length(0);
        })
    });

    describe('#set2Array ', function () {
        it('should return an equivalent array', function () {
            let s = new Set([1, 4, 9]);
            lang.set2array(s).should.deep.equal([1, 4, 9]);
        })
    });

    describe('#hadProp', function () {
        it('should return whether obj own property', function(){
            let obj = {
                'a': 123,
                'b': 330
            };
            let tests = ['a', 'c'];
            lang.hasProp(obj, tests[0]).should.equal(true);
            lang.hasProp(obj, tests[1]).should.equal(false);
        })
    })
})