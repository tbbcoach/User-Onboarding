/**
 * Created by aesop on 2016/2/2.
 */
"use strict";
const should = require('chai').should;

const FileObjectCache = require('../lib/file-object'),
    part = require('../lib/os').partedSymbol,
    delCommand = require('../lib/os').delCommad,
    exec = require('child_process').execSync;

describe('FileObject module', function () {
    let rootPath = 'test',
        outDir = 'test' + part + 'dist';
    let fileObjCache = new FileObjectCache(rootPath, outDir),
        fileNames = ['files' + part + 'test.txt', 'sample' + part + 'css' + part + 'style.css'],
        uriMap = {};
    uriMap[['sample', 'images', 'a.jpg'].join(part)] = '/sample/images/a_vaswgew.jpg';

    describe('#FileObjectCache', function () {
        //fileObjCache.addAFile('').should.deep.equal();
        describe('#add A File', function () {
            it('should return file Object and make cache own it', function () {
                fileNames.map(fileName=> {
                    fileObjCache.addAFile(fileName);
                    fileObjCache.should.contain.keys(fileName);
                    fileObjCache[fileName].processor('dependency');
                });

            });
        });
        describe('#insert uri', function () {
            it('should not throw any exceptions', function () {
                fileNames.map(fileName=> {
                    fileObjCache[fileName].insertUri(uriMap);
                });
            });
        });
        describe('#set Hash', function () {
            it('should not throw any exceptions', function () {
                fileNames.map(fileName=> {
                    fileObjCache[fileName].setHash().should.be.a('string');
                });
            });
        });
        describe('#save', function () {
            it('should not throw any exceptions', function () {
                fileNames.map(fileName=> {
                    fileObjCache[fileName].save();
                });
            });
            after(function () {
                delCommand.map(x=>exec(x + outDir));
            });
        });
    })
})