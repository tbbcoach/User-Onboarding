/**
 * Created by yuji on 2015/10/28.
 */
'use strict';

const util = require('./util');
const fs = require('fs');
const path = require('./path');
const FileProcessor = require('./file-processor');
const os = require('./os');
const mkdirp = require('mkdirp');

// fileName 是相对于rootPath的路径
class FileObject extends FileProcessor {
  constructor(fileName, content, rootPath, outDir) {
    super();
    const ext = path.extname(fileName);
    Object.assign(this, {
      fileName,
      dir: path.dirname(fileName) + os.partedSymbol,
      outDir,
      rootPath,
      ext,
      basename: fileName.slice(0, -ext.length),
      fullName: '',
      relativeName: '',
      type: util.getFileType(ext),
      content,
      template: '',
      hash: '',
    });
    this.processor('construct');
  }

  static genObj(filePath, rootPath, outDir) {
    let buff;
    try {
      buff = fs.readFileSync(path.join(rootPath, filePath));
    } catch (e) {
      buff = new Buffer(0);
    }

    return new FileObject(filePath, buff, rootPath, outDir);
  }

  // map需要这种结构
  // {
  // "image/a/b.png":"/image/a/b.dfde134.png"
  // }
  insertUri(uriMap) {
    this.processor('insert-uri', uriMap);
    return this;
  }

  setHash() {
    this.processor('before:set-hash');
    this.hash = util.md5Suffix(this.content);
    this.relativeName = `${this.basename}.${this.hash}${this.ext}`;
    this.fullName = path.join(this.rootPath, '..', this.outDir, this.relativeName);
    this.processor('after:set-hash');
    return path.toWebPath(this.relativeName);
  }

  save() {
    this.processor('before:save');
    try {
      mkdirp.sync(path.dirname(this.fullName));
    } finally {
      fs.writeFileSync(this.fullName, this.content);
      this.processor('after:save');
    }
    return this;
  }
}

class FileObjectCache {
  constructor(rootPath, outDir) {
    this.rootPath = rootPath;
    this.outDir = outDir;
  }

  addAFile(fileName) {
    this[fileName] = FileObject.genObj(fileName, this.rootPath, this.outDir);
    return this[fileName];
  }
}

module.exports = FileObjectCache;
