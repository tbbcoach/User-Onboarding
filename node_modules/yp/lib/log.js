/**
 * Created by yuji on 2015/11/3.
 */
'use strict';

const fs = require('fs');
const config = require('./config');
const os = require('os');
const log = exports;
const lang = require('./lang');
const mkdirp = require('mkdirp');
const path = require('path');

Date.prototype.format = function (fmt) {
  const formatRegexComponents = {
    'M+': this.getMonth() + 1, // 月份
    'd+': this.getDate(), //  日
    'h+': this.getHours(), // 小时
    'm+': this.getMinutes(), // 分
    's+': this.getSeconds(),
  };
  if (/(y+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, String(this.getFullYear()).substr(4 - RegExp.$1.length));
  }
  lang.mapObject(formatRegexComponents, (reg, value) => {
    if (new RegExp(`(${reg})`).test(fmt)) {
      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (value) :
        ((`00${value}`).substr((String(value)).length)));
    }
  });
  return fmt;
};

const nowDay = new Date().format('yyyy-MM-dd');
const dirCache = {};

/**
 * 增加日志配置
 * @param data
 * @param level
 */
const appendFile = function (data, level) {
  return;
  if (!dirCache.hasOwnProperty(config.logdir)) {
    mkdirp.sync(config.logdir);
  }
  const fileName = path.join(config.logdir, `construct-${nowDay}.log`);
  if (config.logLevel <= level) {
      fs.appendFile(fileName, `${data}\n`);
  }
  return fileName;
};

const getNowTime = () => new Date().format('yyyy-MM-dd hh:mm:ss');

log.log = function (...args) {
  return appendFile(`[info]   ${getNowTime()}   ${args.join('')}`, 0);
};

log.error = err => appendFile(`[error]   ${getNowTime()}   ${err}`, 2);

log.warn = warn => appendFile(`[warn]   ${getNowTime()}    ${warn}`, 1);

log.out = function (...args) {
  const outStream = config.outStream || process.stdout;
  const result = args.join(os.EOL) + os.EOL;
  outStream.write(result);
};
