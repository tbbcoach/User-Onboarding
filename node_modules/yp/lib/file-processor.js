/**
 * Created by aesop on 2016/2/1.
 */
'use strict';

const log = require('./log');
const path = require('path');


const emptyFunction = () => {
};

const defaultProcessor = {
  construct: emptyFunction,
  'insert-uri': emptyFunction,
  'before:set-hash': emptyFunction,
  'after:set-hash'() {
    this.outRelativeName = path.join(this.outDir, this.relativeName);
  },
  'before:save': emptyFunction,
  'after:save'() {
    log.out(this.outRelativeName);
  },
  dependency: emptyFunction,
  name: () => 'default',
};

/**
 * assign 和 create一起使用
 * 都比 __proto__快
 * @param type
 * @returns {*}
 */
const fileProcessor = type=> {
  if (!fileProcessor.hasOwnProperty(type)) {
    try {
      const processorModule = require('yp-' + type);
      fileProcessor[type] = Object.assign(Object.create(defaultProcessor), processorModule);
    }
    catch (e) {
      fileProcessor[type] = defaultProcessor;
    }

  }
  return fileProcessor[type];
}


class Processor {
  constructor() {

  }

  processor(stage) {
    return fileProcessor(this.type)[stage].apply(this, [].slice.call(arguments, 1));
  }
}


module.exports = Processor;



